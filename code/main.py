# –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π:
import time
import traceback

import VKLong.VKLong.object
import requests

from config import *
from VKLong.VKLong import *
from db.database import *
from utils.keyboards import *
from traceback import print_exc

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:

user_token = input("–í–≤–µ–¥–∏—Ç–µ user-token, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π: ")

bot = Bot(token=BOT_TOKEN)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:
@bot.get_updates
def on_update(event):
    try:
        # –ï—Å–ª–∏ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:
        if event.type == "message_new":
            message_object = VKLong.VKLong.object.message_new(event.response)
            message = message_object.text.lower()
            user_id = message_object.from_id
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:
            if message_object.from_id < 2E9:

                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏ –Ω–µ —É–∫–∞–∑–∞–ª –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
                if (user_id,) not in users.execute("SELECT user_id FROM main").fetchall():
                    user_name = bot.execute_api("users.get", {'user_id': user_id})[0]['first_name']
                    users.execute("INSERT INTO main(user_id, first_name, sex, preferred_sex, preferred_age_from, preferred_age_to, search_offset, registration_stage) "
                                 "VALUES (?, ?, ?, ?, ?, ?, ?, ?)", (user_id, user_name, "NULL", "NULL", "NULL", "NULL", 0, "choice_sex"))
                    bot.answer("üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VKinder!\n"
                               "\n"
                               "üëâ –í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:", key_choice_sex)

                # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
                elif (user_id,) in users.execute("SELECT user_id FROM main WHERE registration_stage != 'finished'").fetchall():
                    registration_stage = users.execute(f"SELECT registration_stage FROM main WHERE user_id = '{user_id}'").fetchall()[0][0]
                    # –í—ã–±–æ—Ä —Å–≤–æ–µ–≥–æ –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:
                    if registration_stage == "choice_sex":
                        if message in accepted_sex:
                            users.execute(f"UPDATE main SET registration_stage = 'choice_preferred_sex' "
                                          f"WHERE user_id = '{user_id}'")
                            if message == "–º—É–∂—Å–∫–æ–π":
                                users.execute(f"UPDATE main SET sex = 'male' WHERE user_id = '{user_id}'")
                            elif message == "–∂–µ–Ω—Å–∫–∏–π":
                                users.execute(f"UPDATE main SET sex = 'female' WHERE user_id = '{user_id}'")
                            bot.answer("üëç –û—Ç–ª–∏—á–Ω–æ! –° —Ç–≤–æ–∏–º –ø–æ–ª–æ–º –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å.\n"
                                       "\n"
                                       "üëâ –í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π –ø–æ–ª, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—á–µ—à—å –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è: ", key_choice_sex)
                        else:
                            bot.answer("ü§ö –£–ø—Å! –í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø–æ–ª!\n"
                                       "\n"
                                       "üëâ –í—ã–±–µ—Ä–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø–æ–ª –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:", key_choice_sex)

                    # –í—ã–±–æ—Ä –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–æ–≥–æ –ø–æ–ª–∞:
                    elif registration_stage == "choice_preferred_sex":
                        if message in accepted_sex:
                            users.execute(f"UPDATE main SET registration_stage = 'choice_preferred_age' "
                                          f"WHERE user_id = '{user_id}'")
                            if message == "–º—É–∂—Å–∫–æ–π":
                                users.execute(f"UPDATE main SET preferred_sex = 'male' WHERE user_id = '{user_id}'")
                            elif message == "–∂–µ–Ω—Å–∫–∏–π":
                                users.execute(f"UPDATE main SET preferred_sex = 'female' WHERE user_id = '{user_id}'")
                            bot.answer("üëç –û—Ç–ª–∏—á–Ω–æ! –° –ø—Ä–µ–ø–æ–¥—á–∏—Ç–∞–µ–º—ã–º –ø–æ–ª–æ–º –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å!\n"
                                       "\n"
                                       "üëâ –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ –¥–∏–∞–ø–∞–∑–æ–Ω –≤–æ–∑—Ä–∞—Å—Ç–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞:\n"
                                       "(–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ: 20-25)")
                        else:
                            bot.answer("ü§ö –£–ø—Å! –í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π –ø–æ–ª!\n"
                                       "\n"
                                       "üëâ –í—ã–±–µ—Ä–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø–æ–ª –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:", key_choice_sex)

                    # –£–∫–∞–∑–∞–Ω–∏–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É:
                    elif registration_stage == "choice_preferred_age":
                        try:
                            minimal_age = int(message.split('-')[0])
                            maximum_age = int(message.split('-')[1])
                            if minimal_age > maximum_age:
                                minimal_age, maximum_age = maximum_age, minimal_age
                            if 18 <= minimal_age <= 99 and 18 <= maximum_age <= 99:
                                users.execute(f"UPDATE main SET preferred_age_from = '{minimal_age}' WHERE user_id = '{user_id}'")
                                users.execute(f"UPDATE main SET preferred_age_to = '{maximum_age}' WHERE user_id = '{user_id}'")
                                users.execute(f"UPDATE main SET registration_stage = 'finished' WHERE user_id = '{user_id}'")
                                bot.answer("ü•≥ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è VKinder!\n"
                                           "\n"
                                           'üëâ –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É - "–ø–æ–∏—Å–∫", —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞!', key_search)

                            else:
                                bot.answer("ü§ö –£–ø—Å! –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 18-—Ç–∏ –∏ –Ω–µ –±–æ–ª–µ–µ 99-—Ç–∏ –ª–µ—Ç!\n"
                                           "\n"
                                           "üëâ –û—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏–¥–∞ 20-25, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–∏—Å–∫–∞:")

                        except ValueError:
                            bot.answer("ü§ö –£–ø—Å! –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞ –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!\n"
                                       "\n"
                                       "üëâ –û—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏–¥–∞ 20-25, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–∏—Å–∫–∞:")

                        except IndexError:
                            bot.answer("ü§ö –£–ø—Å! –¢—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª(–∞) –¥–∏–∞–ø–∞–∑–æ–Ω –≤–æ–∑—Ä–∞—Å—Ç–∞!\n"
                                       "\n"
                                       "üëâ –û—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏–¥–∞ 20-25, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–∏—Å–∫–∞:")

                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:
                elif (user_id,) in users.execute("SELECT user_id FROM main WHERE registration_stage = 'finished'").fetchall():
                    if message == "–ø–æ–∏—Å–∫" or message == "üîé –ø–æ–∏—Å–∫":

                        while True:
                            # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:
                            preferred_sex = users.execute(f"SELECT preferred_sex FROM main WHERE user_id = '{user_id}'").fetchall()[0][0]
                            if preferred_sex == "female":
                                preferred_sex = 1
                            elif preferred_sex == "male":
                                preferred_sex = 2
                            age_from = int(users.execute(f"SELECT preferred_age_from FROM main WHERE user_id = '{user_id}'").fetchall()[0][0])
                            age_to = int(users.execute(f"SELECT preferred_age_to FROM main WHERE user_id = '{user_id}'").fetchall()[0][0])
                            offset = int(users.execute(f"SELECT search_offset FROM main WHERE user_id = '{user_id}'").fetchall()[0][0])

                            response = requests.get("https://api.vk.com/method/users.search",
                                                    params={
                                                        'offset': offset,
                                                        'sex': preferred_sex,
                                                        'status': (1, 6),
                                                        'age_from': age_from,
                                                        'age_to': age_to,
                                                        'access_token': user_token,
                                                        'v': 5.131
                                                    }).json()

                            users.execute(f"UPDATE main SET search_offset = search_offset + 1 WHERE user_id = '{user_id}'")
                            users_db.commit()

                            finded_user_object = response['response']['items'][0]
                            is_profile_closed = finded_user_object['is_closed']
                            if not is_profile_closed:
                                photos_object = requests.get("https://api.vk.com/method/photos.getAll",
                                                    params={
                                                        'owner_id': finded_user_object['id'],
                                                        'extended': 1,
                                                        'count': 100,
                                                        'skip_hidden': 1,
                                                        'access_token': user_token,
                                                        'v': 5.131
                                                    }).json()['response']

                                if photos_object['count'] < 3:
                                    pass

                                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
                                else:
                                    photo_dict = {}
                                    if photos_object['count'] > 100:
                                        photos_object['count'] = 100
                                    for i in range(photos_object['count']):
                                        try:
                                            photo_likes = photos_object['items'][i]['likes']['count']
                                            photo_dict[photo_likes] = f"photo{finded_user_object['id']}_{photos_object['items'][i]['id']}"
                                        except:
                                            break
                                    if photo_dict != {}:
                                        attachment_list = ""
                                        try:
                                            for x in range(3):
                                                attachment_list += f"{photo_dict[max(photo_dict)]},"
                                                photo_dict.pop(max(photo_dict))
                                            bot.answer("üëç –ù–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å!\n"
                                                       "\n"
                                                       f"üèµ [id{finded_user_object['id']}|{finded_user_object['first_name']} {finded_user_object['last_name']}]\n"
                                                       f"–°—Å—ã–ª–∫–∞: vk.com/id{finded_user_object['id']}",
                                                       attachment=str(attachment_list))
                                            break

                                        except:
                                            pass

                            else:
                                pass



    except KeyError:
        print_exc()
        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞!\n"
              f"–ü–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {event.response}\n")
        time.sleep(10)

    except:
        print_exc()
